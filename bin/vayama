#!/usr/bin/python



import argparse
import sys
import signal

from flightsearch import common
from PyQt4.QtCore import SIGNAL, QUrl
from PyQt4.QtGui import QApplication
from PyQt4.QtWebKit import QWebPage

#url = "http://www.stackoverflow.com"

class Crawler(QWebPage):

    def __init__(self, url, outfile, trigger, wait_text, recipients, sender):
        QWebPage.__init__(self)
        self.url = url
        self.outfile = outfile
        self.try_again = True
        self.wait_text = wait_text
        self.trigger = trigger
        self.recipients = recipients
        self.sender = sender

    def crawl(self):
        self.connect(self, SIGNAL('loadFinished(bool)'), self._finished)
        self.mainFrame().load(QUrl(self.url))

    def _finished(self, val):
        html = self.mainFrame().toHtml()
        if self.wait_text in html:
            print 'waiting...'
            return
        print 'Searching...'
        encoded = str(html.toUtf8())
        self._process_html(encoded)
        common.write_to_file(encoded, self.outfile)
        sys.exit()

    def _process_html(self, string):
        sub = string.split('Best<br>Prices</b>')[1].split('</a><br>')[0]
        price = float(sub.split('title="')[1].split('">')[0])

        print 'Cheapest Price currently: $%s' % price
        if price >= self.trigger:
            return
        common.send_price_alert(self.sender, self.recipients,
                                'Vayama Price Alert\n%s' % self.url,
                                'Cheapest Fare currently: %s' % price)


def process_args():
    parser = argparse.ArgumentParser(description='vayama searcher')
    parser.add_argument('-o', '--outfile', help='file to dump html out to',
                        required=True)
    parser.add_argument('-t', '--trigger', help='trigger price for alert',
                        type=int, required=True)
    parser.add_argument('-s', '--sender', help='alert comes from this guy',
                        required=True)
    parser.add_argument('-r', '--recipient', help='who wants an alert',
                        action='append', required=True)
    return parser.parse_args()

def get_vayama_url():
    return 'http://www.vayama.com/home/searching.jsp?s=268958503&vayamaVisit=0&clickThrough=N&originArray=LAX,LHR&destArray=LHR,LAX&dateArray=01092014,06092014&cabinClass=Y&carrPreferance=&noAdults=1&noSenior=0&noChild=0&noInfants=0&noStudents=0&nonStops=&timeArray=0,0,0,0&couponCode=&tripType=RT&random=0.4434155204799026'

def main():
    args = process_args()
    app = QApplication(sys.argv)
    signal.signal(signal.SIGINT, signal.SIG_DFL)
    c1 = Crawler(get_vayama_url(), args.outfile, args.trigger,
                 u'vayama | searching', args.recipient, args.sender)
    c1.crawl()
    app.exec_()

if __name__ == '__main__':
    main()
