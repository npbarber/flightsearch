#!/usr/bin/env python

import argparse
import sys

from flightsearch import hipmunk as hm
from flightsearch import common as fs_common

from twill import get_browser
from twill import commands as tc
#http://www.hipmunk.com/flights/LAX-to-LHR#!dates=Oct01,Oct06&pax=1

base_url = 'http://www.hipmunk.com/flights'


def parse_args():
    parser = argparse.ArgumentParser(description='price flights on hipmunk')
    parser.add_argument('-o', '--outfile', help='write html to file')
    parser.add_argument('-d', '--depdate', help='departure dd/mm/yy',
                        required=True)
    parser.add_argument('-r', '--retdate', help='return dd/mm/yy',
                        required=True)
    parser.add_argument('-s', '--sender', help='who an alert is sent from',
                        required=True)
    parser.add_argument('--recipient', help='who gets alerts',
                        action='append', required=True)
    return parser.parse_args()


def bail(msg):
    print msg
    sys.exit(1)


def main():
    args = parse_args()

    # Disable the auto refreshing whilst searching for flights.
    # We'll deal with that manually
    #tc.config('acknowledge_equiv_refresh', False)

    b = get_browser()

    num_pax = 1
    origin = 'LAX'
    dest = 'LHR'

    import pdb; pdb.set_trace()
    url = hm.build_url(base_url, args.depdate, args.retdate, origin, dest,
                       num_pax)
    b.go(url)
    pass

#    # Search for flights
#    vsf.load_booking_page(b)
#    vsf.flight_search(b, args.depdate, args.retdate)
#
#    # Dump the html to disk if asked to
#    if args.outfile:
#        vsf.write_html_to_disk(b, args.outfile)
#
#    # If nothing availbe, we're done
#    if not vsf.dates_available(b, args.depdate, args.retdate):
#        return
#
#    fs_common.send_alert(args.sender, args.recipient, args.depdate,
#                         args.retdate)

if __name__ == '__main__':
    main()
